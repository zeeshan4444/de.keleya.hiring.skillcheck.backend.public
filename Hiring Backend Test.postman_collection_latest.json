{
	"info": {
		"_postman_id": "c213908e-1039-4695-8843-65d2cf701f00",
		"name": "Hiring Backend Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "As User",
			"item": [
				{
					"name": "Find only current user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Value should be 3\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].id).to.eql(13);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwiZW1haWwiOiJtYW1hVXNlckBmYWtlLW1haWwuY29tIiwiaWF0IjoxNjQ2NjQ1NzEzLCJleHAiOjE2NDY2NDkzMTMsImlzcyI6ImtlbGV5YS5kZXYifQ.Whgzyi7dX_YDcblO2Vfk7J6vN1G16fIxuJcZzFxgwH0",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/user",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ignore search for other",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Value should be 3\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].id).to.eql(3);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwiZW1haWwiOiJtYW1hVXNlckBmYWtlLW1haWwuY29tIiwiaWF0IjoxNjQ2NTk4NDA0LCJleHAiOjE2NDY2MDIwMDQsImlzcyI6ImtlbGV5YS5kZXYifQ.4mN7pbBcp5ezbpTNKCtxn3Z1sWHwBTA9Ow3Wwg7Ykrs",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/user?id=3&id=1",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"user"
							],
							"query": [
								{
									"key": "id",
									"value": "3"
								},
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail get on other id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/user/3132",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"user",
								"3132"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get own user id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwiZW1haWwiOiJtYW1hVXNlckBmYWtlLW1haWwuY29tIiwiaWF0IjoxNjQ2NTk4NDA0LCJleHAiOjE2NDY2MDIwMDQsImlzcyI6ImtlbGV5YS5kZXYifQ.4mN7pbBcp5ezbpTNKCtxn3Z1sWHwBTA9Ow3Wwg7Ykrs",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/user/3",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"user",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update own name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Name is updated\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql('new name');",
									"});",
									"",
									"pm.test(\"Updated At != Created At\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.updated_at).to.not.eql(jsonData.created_at);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwiZW1haWwiOiJtYW1hVXNlckBmYWtlLW1haWwuY29tIiwiaWF0IjoxNjQ2NTk4NDA0LCJleHAiOjE2NDY2MDIwMDQsImlzcyI6ImtlbGV5YS5kZXYifQ.4mN7pbBcp5ezbpTNKCtxn3Z1sWHwBTA9Ow3Wwg7Ykrs",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"new name\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/user/3",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"user",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authenticate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Has credentials\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.credential).to.exist;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"mamaUser@fake-mail.com\",\n    \"password\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/user/authenticate",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"user",
								"authenticate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Has token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.token).to.exist;",
									"});",
									"",
									"pm.test(\"Is JWT token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.token).to.contain('eyJ');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"mamaUser@fake-mail.com\",\n    \"password\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/user/token",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"user",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwiZW1haWwiOiJtYW1hVXNlckBmYWtlLW1haWwuY29tIiwiaWF0IjoxNjQ2NTk4NDA0LCJleHAiOjE2NDY2MDIwMDQsImlzcyI6ImtlbGV5YS5kZXYifQ.4mN7pbBcp5ezbpTNKCtxn3Z1sWHwBTA9Ow3Wwg7Ykrs",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Im1hbWFVc2VyQGZha2UtbWFpbC5jb20iLCJpZCI6MywiaWF0IjoxNjM3MjM1ODI5LCJleHAiOjE2Njg3OTM0Mjl9.gZJE2WIXw9Rbwc4Eouv5hOwDrfzf6bY-wx3fYbhHyMA",
								"type": "default",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseurl}}/user/validate",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"user",
								"validate"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{tokenUser}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "As Admin",
			"item": [
				{
					"name": "Authenticate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Has credentials\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.credential).to.exist;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"mamaUser@fake-mail.com\",\n    \"password\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/user/authenticate",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"user",
								"authenticate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Has token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.token).to.exist;",
									"});",
									"",
									"pm.test(\"Is JWT token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.token).to.contain('eyJ');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "true",
									"type": "string"
								},
								{
									"key": "key",
									"value": "key",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"mamaUser@fake-mail.com\",\n    \"password\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/user/token",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"user",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/user/validate",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"user",
								"validate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should return array of all user\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Array.isArray(jsonData)).to.be.true;",
									"    pm.expect(jsonData.length).to.gt(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwiZW1haWwiOiJtYW1hVXNlckBmYWtlLW1haWwuY29tIiwiaWF0IjoxNjQ2NjA0MDc3LCJleHAiOjE2NDY2MDc2NzcsImlzcyI6ImtlbGV5YS5kZXYifQ.2ofV19MELEII7hUdzER4x6uxftA5NcOm94JyN8QqrF4",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "default",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseurl}}/user",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"user"
							],
							"query": [
								{
									"key": "email",
									"value": "newuser@fake-mail.com",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "2",
									"disabled": true
								},
								{
									"key": "name",
									"value": "ma",
									"disabled": true
								},
								{
									"key": "id",
									"value": "1",
									"disabled": true
								},
								{
									"key": "id",
									"value": "3",
									"disabled": true
								},
								{
									"key": "credentials",
									"value": "true",
									"disabled": true
								},
								{
									"key": "updatedSince",
									"value": "2022-03-05T15:22:01.434Z",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Find all users containing ma in name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should return array of users\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Array.isArray(jsonData)).to.be.true;",
									"    pm.expect(jsonData.length).to.gt(1);",
									"});",
									"",
									"pm.test(\"Names should contain 'ma'\", function () {",
									"    var jsonData = pm.response.json();",
									"    for(var item of jsonData) {",
									"        pm.expect(item.name).to.contain('ma')",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwiZW1haWwiOiJtYW1hVXNlckBmYWtlLW1haWwuY29tIiwiaWF0IjoxNjQ2NTk4NDA0LCJleHAiOjE2NDY2MDIwMDQsImlzcyI6ImtlbGV5YS5kZXYifQ.4mN7pbBcp5ezbpTNKCtxn3Z1sWHwBTA9Ow3Wwg7Ykrs",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/user?name=ma",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"user"
							],
							"query": [
								{
									"key": "name",
									"value": "ma"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get specific user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwiZW1haWwiOiJtYW1hVXNlckBmYWtlLW1haWwuY29tIiwiaWF0IjoxNjQ2NjA0Mzg0LCJleHAiOjE2NDY2MDc5ODQsImlzcyI6ImtlbGV5YS5kZXYifQ.gZ7Uaq2sh39q7Jgfa45GD3YPBevGY5SJfKzm5q4rooI",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/user/16",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"user",
								"16"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "key",
								"value": "isPublicEndpoint",
								"type": "default",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"ma User\",\n\t\"email\": \"newuser0001@fake-mail.com\",\n\t\"password\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete that user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Name deleted\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(\"(deleted)\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwiZW1haWwiOiJtYW1hVXNlckBmYWtlLW1haWwuY29tIiwiaWF0IjoxNjQ2NjA2OTMwLCJleHAiOjE2NDY2MTA1MzAsImlzcyI6ImtlbGV5YS5kZXYifQ.-EBXx_eql6WtV35SXNUTCts_YiK-3gGWHhwQPrSQylY",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/user/10",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"user",
								"10"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a user name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Name is updated\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql('new name');",
									"});",
									"",
									"pm.test(\"Updated At != Created At\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.updated_at).to.not.eql(jsonData.created_at);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwiZW1haWwiOiJtYW1hVXNlckBmYWtlLW1haWwuY29tIiwiaWF0IjoxNjQ2NjQ2MTQxLCJleHAiOjE2NDY2NDk3NDEsImlzcyI6ImtlbGV5YS5kZXYifQ.7YOkRZWdGKBFO9rsXFrlYX8R9oDY0B1_Jm-bmfCg5n4",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"new12 name\",\n    \"email_confirmed\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/user/17",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"user",
								"17"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{tokenAdmin}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "health-check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/_health",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"_health"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseurl",
			"value": "http://localhost:3000"
		},
		{
			"key": "tokenUser",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Im1hbWFVc2VyQGZha2UtbWFpbC5jb20iLCJpZCI6MywiaWF0IjoxNjM3MjM1ODI5LCJleHAiOjE2Njg3OTM0Mjl9.gZJE2WIXw9Rbwc4Eouv5hOwDrfzf6bY-wx3fYbhHyMA"
		},
		{
			"key": "tokenAdmin",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluQGZha2UtbWFpbC5jb20iLCJpZCI6NCwiaWF0IjoxNjM3MzM3ODg0LCJleHAiOjE2Njg4OTU0ODR9.b79XlIFEnTIE0A0RWJA2pK2atSb1bpRzkC0nNGzGIxQ"
		}
	]
}